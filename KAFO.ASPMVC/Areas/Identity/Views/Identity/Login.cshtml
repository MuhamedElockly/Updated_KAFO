@model IdentityViewModel
@{
	ViewData["Title"] = "Login";
	Layout = null;
}

<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
	<meta charset="utf-t">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>@ViewData["Title"] - كافو</title>

	<!-- Bootstrap RTL -->
	<link rel="stylesheet" href="~/CCDN/bootstrap.rtl.min.css">

	<!-- Font Awesome -->
	<link rel="stylesheet" href="~/CCDN/font-awesome-6.4.0.min.css">

	<!-- Tajawal Arabic Font -->
	<link href="~/CCDN/Tajawal.css" rel="stylesheet">

	<!-- Animate.css -->
	<link rel="stylesheet" href="~/CCDN/animate.min.css">

	<!-- SweetAlert2 -->
	<link rel="stylesheet" href="~/CCDN/sweetalert2.min.css">

	<style>
		:root {
			--primary-color: #4361ee;
			--secondary-color: #3f37c9;
			--accent-color: #4cc9f0;
			--text-color: #2b2d42;
			--light-color: #f8f9fa;
			--gradient: linear-gradient(135deg, #4361ee 0%, #3f37c9 100%);
			--error-color: #dc3545;
			--success-color: #28a745;
		}

		body {
			font-family: 'Tajawal', sans-serif;
			background-color: #f5f7fa;
			color: var(--text-color);
			min-height: 100vh;
			display: flex;
			justify-content: center;
			align-items: center;
			background-image: radial-gradient(circle at 10% 20%, rgba(76, 201, 240, 0.1) 0%, transparent 20%), radial-gradient(circle at 90% 80%, rgba(67, 97, 238, 0.1) 0%, transparent 20%);
			animation: gradientBackground 15s ease infinite;
			background-size: 200% 200%;
		}

		@@keyframes gradientBackground {
			0% {
				background-position: 0% 0%;
			}

			50% {
				background-position: 100% 100%;
			}

			100% {
				background-position: 0% 0%;
			}
		}

		.login-container {
			width: 100%;
			max-width: 450px;
			padding: 20px;
			opacity: 0;
			transform: translateY(20px);
			animation: fadeInUp 0.8s ease-out forwards;
		}

		@@keyframes fadeInUp {
			to {
				opacity: 1;
				transform: translateY(0);
			}
		}

		.login-card {
			border: none;
			border-radius: 16px;
			overflow: hidden;
			box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
			transition: transform 0.3s ease, box-shadow 0.3s ease;
			background: white;
		}

			.login-card:hover {
				transform: translateY(-5px);
				box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
			}

		.login-card-header {
			background: var(--gradient);
			color: white;
			padding: 2rem;
			text-align: center;
			position: relative;
			overflow: hidden;
		}

			.login-card-header::before {
				content: "";
				position: absolute;
				top: -50%;
				left: -50%;
				width: 200%;
				height: 200%;
				background: radial-gradient(circle, rgba(255,255,255,0.2) 0%, transparent 70%);
				transform: rotate(30deg);
				animation: shine 3s infinite;
			}

		@@keyframes shine {
			0% {
				transform: rotate(30deg) translate(-30%, -30%);
			}

			100% {
				transform: rotate(30deg) translate(30%, 30%);
			}
		}

		.logo {
			font-size: 2.5rem;
			font-weight: 900;
			margin-bottom: 0.5rem;
			background: linear-gradient(135deg, #fff 0%, #f8f9fa 100%);
			-webkit-background-clip: text;
			background-clip: text;
			color: transparent;
			text-shadow: 0 2px 4px rgba(0,0,0,0.1);
			position: relative;
			display: inline-block;
		}

			.logo::after {
				content: "";
				position: absolute;
				bottom: -10px;
				left: 50%;
				transform: translateX(-50%);
				width: 50px;
				height: 3px;
				background: var(--accent-color);
				border-radius: 3px;
			}

		.login-card-header h3 {
			font-weight: 600;
			margin: 0;
			font-size: 1.5rem;
		}

		.login-card-body {
			padding: 2rem;
		}

		.form-label {
			font-weight: 500;
			margin-bottom: 0.5rem;
			color: var(--text-color);
		}

		.form-control {
			border-radius: 8px;
			padding: 0.75rem 1rem;
			border: 1px solid #e0e0e0;
			transition: all 0.3s ease;
		}

			.form-control:focus {
				border-color: var(--primary-color);
				box-shadow: 0 0 0 0.25rem rgba(67, 97, 238, 0.25);
			}

		.input-group-text {
			cursor: pointer;
			transition: all 0.3s ease;
		}

			.input-group-text:hover {
				background-color: #e9ecef;
			}

		.btn-login {
			background: var(--gradient);
			border: none;
			border-radius: 8px;
			padding: 0.75rem;
			font-weight: 600;
			letter-spacing: 0.5px;
			transition: all 0.3s ease;
			position: relative;
			overflow: hidden;
		}

			.btn-login:hover {
				transform: translateY(-2px);
				box-shadow: 0 5px 15px rgba(67, 97, 238, 0.3);
			}

			.btn-login::after {
				content: "";
				position: absolute;
				top: -50%;
				left: -50%;
				width: 200%;
				height: 200%;
				background: radial-gradient(circle, rgba(255,255,255,0.4) 0%, transparent 70%);
				transform: rotate(30deg);
				transition: all 0.7s ease;
				opacity: 0;
			}

			.btn-login:hover::after {
				opacity: 1;
				transform: rotate(30deg) translate(30%, 30%);
			}

		.validation-message {
			font-size: 0.85rem;
			height: 20px;
			opacity: 0;
			transform: translateY(-10px);
			transition: all 0.3s ease;
		}

			.validation-message.show {
				opacity: 1;
				transform: translateY(0);
			}

		.text-danger {
			color: var(--error-color);
		}

		.text-success {
			color: var(--success-color);
		}

		.alert-danger {
			border-radius: 8px;
			animation: shake 0.5s ease-in-out;
		}

		@@keyframes shake {
			0%, 100% {
				transform: translateX(0);
			}

			20%, 60% {
				transform: translateX(-5px);
			}

			40%, 80% {
				transform: translateX(5px);
			}
		}

		/* RTL adjustments */
		.form-control, .btn, .alert, .input-group-text {
			text-align: right;
		}

		.input-group-text {
			border-radius: 0 8px 8px 0 !important;
		}

		.input-group .form-control {
			border-radius: 8px 0 0 8px !important;
		}
	</style>
</head>
<body>
	<div class="login-container animate__animated animate__fadeIn">
		<div class="login-card">
			<div class="login-card-header">
				<div class="logo">كافو</div>
				<h3><i class="fas fa-lock me-2"></i>تسجيل الدخول</h3>
			</div>
			<div class="login-card-body">
				<form id="loginForm" method="post" asp-action="Login" novalidate>
					<div id="validation-summary" class="alert alert-danger text-right mb-4 d-none"></div>
					<input type="hidden" name="returnUrl" value="@ViewData["ReturnUrl"]" />

					<div class="mb-4">
						<label for="userName" class="form-label">البريد الإلكتروني أو رقم الهاتف</label>
						<div class="input-group">
							<input name="userName" id="userName" class="form-control"
								   placeholder="أدخل البريد الإلكتروني أو رقم الهاتف"
								   required />
							<span class="input-group-text"><i class="fas fa-user"></i></span>
						</div>
						<span class="validation-message text-danger"></span>
					</div>

					<div class="mb-4">
						<label for="passwordField" class="form-label">كلمة المرور</label>
						<div class="input-group">
							<input name="password" type="password" class="form-control"
								   id="passwordField"
								   placeholder="أدخل كلمة المرور"
								   required />
							<span class="input-group-text toggle-password">
								<i class="fas fa-eye"></i>
							</span>
						</div>
						<span class="validation-message text-danger"></span>
					</div>
					<div class="form-check form-switch mb-4 m-1">
						<input asp-for="RememberMe" class="form-check-input" type="checkbox" id="RememberMe" />
						<label class="form-check-label ms-2" for="RememberMe">تذكرني</label>
					</div>
					<div class="d-grid gap-2 mt-4">
						<button type="submit" class="btn btn-login btn-primary">
							<i class="fas fa-sign-in-alt me-2"></i>تسجيل الدخول
						</button>
					</div>
				</form>
			</div>
		</div>
	</div>

	<!-- Bootstrap Bundle with Popper -->
	<script src="~/CCDN/bootstrap.bundle.min.js"></script>

	<!-- SweetAlert2 -->
	<script src="~/CCDN/sweetalert2.all.min.js"></script>

	<script>
		document.addEventListener('DOMContentLoaded', function () {
			// Password visibility toggle
			const togglePassword = document.querySelector('.toggle-password');
			const passwordField = document.getElementById('passwordField');

			togglePassword.addEventListener('click', function () {
				const type = passwordField.getAttribute('type') === 'password' ? 'text' : 'password';
				passwordField.setAttribute('type', type);
				this.querySelector('i').classList.toggle('fa-eye');
				this.querySelector('i').classList.toggle('fa-eye-slash');
			});

			// Enhanced client-side validation
			const form = document.getElementById('loginForm');
			const inputs = form.querySelectorAll('input.form-control');
			const validationSummary = document.getElementById('validation-summary');

			inputs.forEach(input => {
				input.addEventListener('input', function () {
					validateField(this);
				});

				input.addEventListener('blur', function () {
					validateField(this);
				});
			});

			function validateField(input) {
				const validationMessageSpan = input.parentElement.parentElement.querySelector('.validation-message');
				if (!validationMessageSpan) return;

				const isValid = input.value.trim() !== '';
				let errorMessage = '';

				if (!isValid) {
					if (input.id === 'userName') {
						errorMessage = 'حقل البريد الإلكتروني أو رقم الهاتف مطلوب';
					} else if (input.id === 'passwordField') {
						errorMessage = 'حقل كلمة المرور مطلوب';
					}
				}

				input.setCustomValidity(errorMessage);

				if (isValid) {
					validationMessageSpan.textContent = '✓';
					validationMessageSpan.classList.add('text-success');
					validationMessageSpan.classList.remove('text-danger');
				} else {
					validationMessageSpan.textContent = errorMessage;
					validationMessageSpan.classList.add('text-danger');
					validationMessageSpan.classList.remove('text-success');
				}
				validationMessageSpan.classList.add('show');
			}

			// Form submission with animation
			form.addEventListener('submit', function (e) {
				e.preventDefault(); // Prevent default form submission

				let isFormValid = true;
				inputs.forEach(input => {
					validateField(input);
					if (!input.checkValidity()) {
						isFormValid = false;
					}
				});

				if (!isFormValid) {
					Swal.fire({
						icon: 'error',
						title: 'خطأ في الإدخال',
						text: 'الرجاء إصلاح الأخطاء والمحاولة مرة أخرى.',
						confirmButtonText: 'حسناً'
					});
					return;
				}

				const submitButton = form.querySelector('button[type="submit"]');
				submitButton.disabled = true;
				submitButton.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>جاري تسجيل الدخول...';
				//     Swal.fire({
				//         title: 'جاري التوجيه',
				//         html: 'سيتم تحويلك إلى لوحة التحكم',
				//     timerProgressBar: true,
				//     didOpen: () => {
				//         Swal.showLoading()
				//     },
				//     background: 'white',
				//     backdrop: `
				//         rgba(0,0,0,0.5)
				//         center
				//         no-repeat
				//     `,
				//     allowOutsideClick: false
				// });
				const formData = new FormData(form);

				fetch(form.action, {
					method: 'POST',
					body: formData
				})
					.then(response => response.json())
					.then(data => {
						if (data.success) {
							Swal.fire({
								icon: 'success',
								title: 'تم تسجيل الدخول بنجاح!',
								text: 'سيتم توجيهك الآن...',
								timer: 1500,
								timerProgressBar: true,
								showConfirmButton: false,
								backdrop: `
									rgba(0,0,0,0.5)
									center
									no-repeat
								`,
							}).then(() => {
								window.location.href = data.redirectUrl;
							});
						} else {
							Swal.fire({
								icon: 'error',
								title: 'فشل تسجيل الدخول',
								text: data.message,
								confirmButtonText: 'حسناً'
							});
							submitButton.disabled = false;
							submitButton.innerHTML = '<i class="fas fa-sign-in-alt me-2"></i>تسجيل الدخول';
						}
					})
					.catch(error => {
						console.error('Error:', error);
						Swal.fire({
							icon: 'error',
							title: 'حدث خطأ غير متوقع',
							text: 'لا يمكن الاتصال بالخادم. الرجاء المحاولة مرة أخرى.',
							confirmButtonText: 'حسناً'
						});
						submitButton.disabled = false;
						submitButton.innerHTML = '<i class="fas fa-sign-in-alt me-2"></i>تسجيل الدخول';
					});
			});

			// Initial animations for form elements
			const formElements = form.querySelectorAll('.form-control, .btn-login');
			formElements.forEach((el, index) => {
				el.style.opacity = '0';
				el.style.transform = 'translateY(10px)';
				el.style.animation = `fadeInUp 0.5s ease-out ${index * 0.1 + 0.5}s forwards`;
			});
		});
	</script>
</body>
</html>



@* @model IdentityViewModel *@
@* @{ *@
@* 	ViewData["Title"] = "Login"; *@
@* 	Layout = null; *@
@* } *@

@* <!DOCTYPE html> *@
@* <html lang="ar" dir="rtl"> *@
@* <head> *@
@* 	<meta charset="utf-8"> *@
@* 	<meta name="viewport" content="width=device-width, initial-scale=1"> *@
@* 	<title>@ViewData["Title"] - كافو</title> *@

@* 	<!-- Bootstrap RTL --> *@
@* 	<link rel="stylesheet" href="~/CCDN/bootstrap.rtl.min.css"> *@

@* 	<!-- Font Awesome --> *@
@* 	<link rel="stylesheet" href="~/CCDN/font-awesome-6.4.0.min.css"> *@

@* 	<!-- Tajawal Arabic Font --> *@
@* 	<link href="~/CCDN/Tajawal.css" rel="stylesheet"> *@

@* 	<!-- Animate.css --> *@
@* 	<link rel="stylesheet" href="~/CCDN/animate.min.css"> *@

@* 	<!-- SweetAlert2 --> *@
@* 	<link rel="stylesheet" href="~/CCDN/sweetalert2.min.css"> *@

@* 	<style> *@
@* 		:root { *@
@* 			--primary-color: #4361ee; *@
@* 			--secondary-color: #3f37c9; *@
@* 			--accent-color: #4cc9f0; *@
@* 			--text-color: #2b2d42; *@
@* 			--light-color: #f8f9fa; *@
@* 			--gradient: linear-gradient(135deg, #4361ee 0%, #3f37c9 100%); *@
@* 			--error-color: #dc3545; *@
@* 			--success-color: #28a745; *@
@* 		} *@

@* 		body { *@
@* 			font-family: 'Tajawal', sans-serif; *@
@* 			background-color: #f5f7fa; *@
@* 			color: var(--text-color); *@
@* 			min-height: 100vh; *@
@* 			display: flex; *@
@* 			flex-direction: column; *@
@* 			justify-content: center; *@
@* 			align-items: center; *@
@* 			background-image: radial-gradient(circle at 10% 20%, rgba(76, 201, 240, 0.1) 0%, transparent 20%), radial-gradient(circle at 90% 80%, rgba(67, 97, 238, 0.1) 0%, transparent 20%); *@
@* 			animation: gradientBackground 15s ease infinite; *@
@* 			background-size: 200% 200%; *@
@* 		} *@

@* 		@@keyframes gradientBackground { *@
@* 			0% { *@
@* 				background-position: 0% 0%; *@
@* 			} *@

@* 			50% { *@
@* 				background-position: 100% 100%; *@
@* 			} *@

@* 			100% { *@
@* 				background-position: 0% 0%; *@
@* 			} *@
@* 		} *@

@* 		.login-container { *@
@* 			width: 100%; *@
@* 			max-width: 450px; *@
@* 			padding: 20px; *@
@* 			opacity: 0; *@
@* 			transform: translateY(20px); *@
@* 			animation: fadeInUp 0.8s ease-out forwards; *@
@* 		} *@

@* 		@@keyframes fadeInUp { *@
@* 			to { *@
@* 				opacity: 1; *@
@* 				transform: translateY(0); *@
@* 			} *@
@* 		} *@

@* 		.login-card { *@
@* 			border: none; *@
@* 			border-radius: 16px; *@
@* 			overflow: hidden; *@
@* 			box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1); *@
@* 			transition: transform 0.3s ease, box-shadow 0.3s ease; *@
@* 			background: white; *@
@* 		} *@

@* 			.login-card:hover { *@
@* 				transform: translateY(-5px); *@
@* 				box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15); *@
@* 			} *@

@* 		.login-card-header { *@
@* 			background: var(--gradient); *@
@* 			color: white; *@
@* 			padding: 2rem; *@
@* 			text-align: center; *@
@* 			position: relative; *@
@* 			overflow: hidden; *@
@* 		} *@

@* 			.login-card-header::before { *@
@* 				content: ""; *@
@* 				position: absolute; *@
@* 				top: -50%; *@
@* 				left: -50%; *@
@* 				width: 200%; *@
@* 				height: 200%; *@
@* 				background: radial-gradient(circle, rgba(255,255,255,0.2) 0%, transparent 70%); *@
@* 				transform: rotate(30deg); *@
@* 				animation: shine 3s infinite; *@
@* 			} *@

@* 		@@keyframes shine { *@
@* 			0% { *@
@* 				transform: rotate(30deg) translate(-30%, -30%); *@
@* 			} *@

@* 			100% { *@
@* 				transform: rotate(30deg) translate(30%, 30%); *@
@* 			} *@
@* 		} *@

@* 		.logo { *@
@* 			font-size: 2.5rem; *@
@* 			font-weight: 900; *@
@* 			margin-bottom: 0.5rem; *@
@* 			background: linear-gradient(135deg, #fff 0%, #f8f9fa 100%); *@
@* 			-webkit-background-clip: text; *@
@* 			background-clip: text; *@
@* 			color: transparent; *@
@* 			text-shadow: 0 2px 4px rgba(0,0,0,0.1); *@
@* 			position: relative; *@
@* 			display: inline-block; *@
@* 		} *@

@* 			.logo::after { *@
@* 				content: ""; *@
@* 				position: absolute; *@
@* 				bottom: -10px; *@
@* 				left: 50%; *@
@* 				transform: translateX(-50%); *@
@* 				width: 50px; *@
@* 				height: 3px; *@
@* 				background: var(--accent-color); *@
@* 				border-radius: 3px; *@
@* 			} *@

@* 		.login-card-header h3 { *@
@* 			font-weight: 600; *@
@* 			margin: 0; *@
@* 			font-size: 1.5rem; *@
@* 		} *@

@* 		.login-card-body { *@
@* 			padding: 2rem; *@
@* 		} *@

@* 		.form-label { *@
@* 			font-weight: 500; *@
@* 			margin-bottom: 0.5rem; *@
@* 			color: var(--text-color); *@
@* 		} *@

@* 		.form-control { *@
@* 			border-radius: 8px; *@
@* 			padding: 0.75rem 1rem; *@
@* 			border: 1px solid #e0e0e0; *@
@* 			transition: all 0.3s ease; *@
@* 		} *@

@* 			.form-control:focus { *@
@* 				border-color: var(--primary-color); *@
@* 				box-shadow: 0 0 0 0.25rem rgba(67, 97, 238, 0.25); *@
@* 			} *@

@* 		.input-group-text { *@
@* 			cursor: pointer; *@
@* 			transition: all 0.3s ease; *@
@* 		} *@

@* 			.input-group-text:hover { *@
@* 				background-color: #e9ecef; *@
@* 			} *@

@* 		.btn-login { *@
@* 			background: var(--gradient); *@
@* 			border: none; *@
@* 			border-radius: 8px; *@
@* 			padding: 0.75rem; *@
@* 			font-weight: 600; *@
@* 			letter-spacing: 0.5px; *@
@* 			transition: all 0.3s ease; *@
@* 			position: relative; *@
@* 			overflow: hidden; *@
@* 		} *@

@* 			.btn-login:hover { *@
@* 				transform: translateY(-2px); *@
@* 				box-shadow: 0 5px 15px rgba(67, 97, 238, 0.3); *@
@* 			} *@

@* 			.btn-login::after { *@
@* 				content: ""; *@
@* 				position: absolute; *@
@* 				top: -50%; *@
@* 				left: -50%; *@
@* 				width: 200%; *@
@* 				height: 200%; *@
@* 				background: radial-gradient(circle, rgba(255,255,255,0.4) 0%, transparent 70%); *@
@* 				transform: rotate(30deg); *@
@* 				transition: all 0.7s ease; *@
@* 				opacity: 0; *@
@* 			} *@

@* 			.btn-login:hover::after { *@
@* 				opacity: 1; *@
@* 				transform: rotate(30deg) translate(30%, 30%); *@
@* 			} *@

@* 		.validation-message { *@
@* 			font-size: 0.85rem; *@
@* 			height: 20px; *@
@* 			opacity: 0; *@
@* 			transform: translateY(-10px); *@
@* 			transition: all 0.3s ease; *@
@* 		} *@

@* 			.validation-message.show { *@
@* 				opacity: 1; *@
@* 				transform: translateY(0); *@
@* 			} *@

@* 		.text-danger { *@
@* 			color: var(--error-color); *@
@* 		} *@

@* 		.text-success { *@
@* 			color: var(--success-color); *@
@* 		} *@

@* 		.alert-danger { *@
@* 			border-radius: 8px; *@
@* 			animation: shake 0.5s ease-in-out; *@
@* 		} *@

@* 		@@keyframes shake { *@
@* 			0%, 100% { *@
@* 				transform: translateX(0); *@
@* 			} *@

@* 			20%, 60% { *@
@* 				transform: translateX(-5px); *@
@* 			} *@

@* 			40%, 80% { *@
@* 				transform: translateX(5px); *@
@* 			} *@
@* 		} *@

@* 		/* Developers Section Styles */ *@
@* 		.developers-section { *@
@* 			margin-top: 2rem; *@
@* 			width: 100%; *@
@* 			max-width: 450px; *@
@* 			opacity: 0; *@
@* 			animation: fadeInUp 1s ease-out 0.5s forwards; *@
@* 		} *@

@* 		.developers-card { *@
@* 			background: rgba(255, 255, 255, 0.95); *@
@* 			backdrop-filter: blur(10px); *@
@* 			border-radius: 16px; *@
@* 			padding: 1.5rem; *@
@* 			box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1); *@
@* 			border: 1px solid rgba(255, 255, 255, 0.2); *@
@* 			transition: all 0.3s ease; *@
@* 		} *@

@* 		.developers-card:hover { *@
@* 			transform: translateY(-3px); *@
@* 			box-shadow: 0 15px 40px rgba(0, 0, 0, 0.15); *@
@* 		} *@

@* 		.developers-header { *@
@* 			text-align: center; *@
@* 			margin-bottom: 1.5rem; *@
@* 			position: relative; *@
@* 		} *@

@* 		.developers-title { *@
@* 			font-size: 1.2rem; *@
@* 			font-weight: 700; *@
@* 			color: var(--primary-color); *@
@* 			margin-bottom: 0.5rem; *@
@* 			display: flex; *@
@* 			align-items: center; *@
@* 			justify-content: center; *@
@* 			gap: 0.5rem; *@
@* 		} *@

@* 		.developers-subtitle { *@
@* 			font-size: 0.9rem; *@
@* 			color: #6c757d; *@
@* 			margin: 0; *@
@* 		} *@

@* 		.developers-list { *@
@* 			display: flex; *@
@* 			flex-direction: column; *@
@* 			gap: 1rem; *@
@* 		} *@

@* 		.developer-item { *@
@* 			display: flex; *@
@* 			align-items: center; *@
@* 			justify-content: space-between; *@
@* 			padding: 1rem; *@
@* 			background: linear-gradient(135deg, rgba(67, 97, 238, 0.05) 0%, rgba(76, 201, 240, 0.05) 100%); *@
@* 			border-radius: 12px; *@
@* 			border: 1px solid rgba(67, 97, 238, 0.1); *@
@* 			transition: all 0.3s ease; *@
@* 			position: relative; *@
@* 			overflow: hidden; *@
@* 		} *@

@* 		.developer-item::before { *@
@* 			content: ""; *@
@* 			position: absolute; *@
@* 			top: 0; *@
@* 			left: -100%; *@
@* 			width: 100%; *@
@* 			height: 100%; *@
@* 			background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent); *@
@* 			transition: left 0.5s ease; *@
@* 		} *@

@* 		.developer-item:hover::before { *@
@* 			left: 100%; *@
@* 		} *@

@* 		.developer-item:hover { *@
@* 			transform: translateX(-5px); *@
@* 			box-shadow: 0 5px 15px rgba(67, 97, 238, 0.2); *@
@* 			border-color: var(--primary-color); *@
@* 		} *@

@* 		.developer-info { *@
@* 			display: flex; *@
@* 			align-items: center; *@
@* 			gap: 0.75rem; *@
@* 		} *@

@* 		.developer-avatar { *@
@* 			width: 45px; *@
@* 			height: 45px; *@
@* 			border-radius: 50%; *@
@* 			background: var(--gradient); *@
@* 			display: flex; *@
@* 			align-items: center; *@
@* 			justify-content: center; *@
@* 			color: white; *@
@* 			font-weight: 700; *@
@* 			font-size: 1.1rem; *@
@* 			box-shadow: 0 3px 10px rgba(67, 97, 238, 0.3); *@
@* 		} *@

@* 		.developer-details { *@
@* 			flex: 1; *@
@* 		} *@

@* 		.developer-name { *@
@* 			font-weight: 600; *@
@* 			color: var(--text-color); *@
@* 			margin-bottom: 0.25rem; *@
@* 			font-size: 1rem; *@
@* 		} *@

@* 		.developer-role { *@
@* 			font-size: 0.85rem; *@
@* 			color: #6c757d; *@
@* 			margin: 0; *@
@* 		} *@

@* 		.developer-contact { *@
@* 			display: flex; *@
@* 			align-items: center; *@
@* 			gap: 0.5rem; *@
@* 		} *@

@* 		.phone-link { *@
@* 			display: flex; *@
@* 			align-items: center; *@
@* 			gap: 0.5rem; *@
@* 			padding: 0.5rem 0.75rem; *@
@* 			background: var(--gradient); *@
@* 			color: white; *@
@* 			text-decoration: none; *@
@* 			border-radius: 8px; *@
@* 			font-size: 0.9rem; *@
@* 			font-weight: 500; *@
@* 			transition: all 0.3s ease; *@
@* 			box-shadow: 0 2px 8px rgba(67, 97, 238, 0.3); *@
@* 		} *@

@* 		.phone-link:hover { *@
@* 			transform: translateY(-2px); *@
@* 			box-shadow: 0 4px 12px rgba(67, 97, 238, 0.4); *@
@* 			color: white; *@
@* 			text-decoration: none; *@
@* 		} *@

@* 		.phone-link i { *@
@* 			font-size: 0.8rem; *@
@* 		} *@

@* 		/* RTL adjustments */ *@
@* 		.form-control, .btn, .alert, .input-group-text { *@
@* 			text-align: right; *@
@* 		} *@

@* 		.input-group-text { *@
@* 			border-radius: 0 8px 8px 0 !important; *@
@* 		} *@

@* 		.input-group .form-control { *@
@* 			border-radius: 8px 0 0 8px !important; *@
@* 		} *@

@* 		/* Responsive adjustments */ *@
@* 		@@media (max-width: 576px) { *@
@* 			.developer-item { *@
@* 				flex-direction: column; *@
@* 				align-items: flex-start; *@
@* 				gap: 1rem; *@
@* 			} *@

@* 			.developer-contact { *@
@* 				align-self: stretch; *@
@* 			} *@

@* 			.phone-link { *@
@* 				justify-content: center; *@
@* 			} *@
@* 		} *@
@* 	</style> *@
@* </head> *@
@* <body> *@
@* 	<div class="login-container animate__animated animate__fadeIn"> *@
@* 		<div class="login-card"> *@
@* 			<div class="login-card-header"> *@
@* 				<div class="logo">كافو</div> *@
@* 				<h3><i class="fas fa-lock me-2"></i>تسجيل الدخول</h3> *@
@* 			</div> *@
@* 			<div class="login-card-body"> *@
@* 				<form id="loginForm" method="post" asp-action="Login" novalidate> *@
@* 					<div id="validation-summary" class="alert alert-danger text-right mb-4 d-none"></div> *@
@* 					<input type="hidden" name="returnUrl" value="@ViewData["ReturnUrl"]" /> *@

@* 					<div class="mb-4"> *@
@* 						<label for="userName" class="form-label">البريد الإلكتروني أو رقم الهاتف</label> *@
@* 						<div class="input-group"> *@
@* 							<input name="userName" id="userName" class="form-control" *@
@* 								   placeholder="أدخل البريد الإلكتروني أو رقم الهاتف" *@
@* 								   required /> *@
@* 							<span class="input-group-text"><i class="fas fa-user"></i></span> *@
@* 						</div> *@
@* 						<span class="validation-message text-danger"></span> *@
@* 					</div> *@

@* 					<div class="mb-4"> *@
@* 						<label for="passwordField" class="form-label">كلمة المرور</label> *@
@* 						<div class="input-group"> *@
@* 							<input name="password" type="password" class="form-control" *@
@* 								   id="passwordField" *@
@* 								   placeholder="أدخل كلمة المرور" *@
@* 								   required /> *@
@* 							<span class="input-group-text toggle-password"> *@
@* 								<i class="fas fa-eye"></i> *@
@* 							</span> *@
@* 						</div> *@
@* 						<span class="validation-message text-danger"></span> *@
@* 					</div> *@
@* 					<div class="form-check form-switch mb-4 m-1"> *@
@* 						<input asp-for="RememberMe" class="form-check-input" type="checkbox" id="RememberMe" /> *@
@* 						<label class="form-check-label ms-2" for="RememberMe">تذكرني</label> *@
@* 					</div> *@
@* 					<div class="d-grid gap-2 mt-4"> *@
@* 						<button type="submit" class="btn btn-login btn-primary"> *@
@* 							<i class="fas fa-sign-in-alt me-2"></i>تسجيل الدخول *@
@* 						</button> *@
@* 					</div> *@
@* 				</form> *@
@* 			</div> *@
@* 		</div> *@

@* 		<!-- Developers Section --> *@
@* 		<div class="developers-section"> *@
@* 			<div class="developers-card"> *@
@* 				<div class="developers-header"> *@
@* 					<div class="developers-title"> *@
@* 						<i class="fas fa-code"></i> *@
@* 						مطوري النظام *@
@* 					</div> *@
@* 					<p class="developers-subtitle">للاستفسار أو الدعم الفني</p> *@
@* 				</div> *@
@* 				<div class="developers-list"> *@
@* 					<div class="developer-item"> *@
@* 						<div class="developer-info"> *@
@* 							<div class="developer-avatar">ST</div> *@
@* 							<div class="developer-details"> *@
@* 								<div class="developer-name">Steven Tharwat</div> *@
@* 								<p class="developer-role">مطور النظام</p> *@
@* 							</div> *@
@* 						</div> *@
@* 						<div class="developer-contact"> *@
@* 							<a href="tel:01211638577" class="phone-link"> *@
@* 								<i class="fas fa-phone"></i> *@
@* 								01211638577 *@
@* 							</a> *@
@* 						</div> *@
@* 					</div> *@
@* 					<div class="developer-item"> *@
@* 						<div class="developer-info"> *@
@* 							<div class="developer-avatar">MA</div> *@
@* 							<div class="developer-details"> *@
@* 								<div class="developer-name">Mohamed Alokaly</div> *@
@* 								<p class="developer-role">مطور النظام</p> *@
@* 							</div> *@
@* 						</div> *@
@* 						<div class="developer-contact"> *@
@* 							<a href="tel:01111111111" class="phone-link"> *@
@* 								<i class="fas fa-phone"></i> *@
@* 								01111111111 *@
@* 							</a> *@
@* 						</div> *@
@* 					</div> *@
@* 				</div> *@
@* 			</div> *@
@* 		</div> *@
@* 	</div> *@

@* 	<!-- Bootstrap Bundle with Popper --> *@
@* 	<script src="~/CCDN/bootstrap.bundle.min.js"></script> *@

@* 	<!-- SweetAlert2 --> *@
@* 	<script src="~/CCDN/sweetalert2.all.min.js"></script> *@

@* 	<script> *@
@* 		document.addEventListener('DOMContentLoaded', function () { *@
@* 			// Password visibility toggle *@
@* 			const togglePassword = document.querySelector('.toggle-password'); *@
@* 			const passwordField = document.getElementById('passwordField'); *@

@* 			togglePassword.addEventListener('click', function () { *@
@* 				const type = passwordField.getAttribute('type') === 'password' ? 'text' : 'password'; *@
@* 				passwordField.setAttribute('type', type); *@
@* 				this.querySelector('i').classList.toggle('fa-eye'); *@
@* 				this.querySelector('i').classList.toggle('fa-eye-slash'); *@
@* 			}); *@

@* 			// Enhanced client-side validation *@
@* 			const form = document.getElementById('loginForm'); *@
@* 			const inputs = form.querySelectorAll('input.form-control'); *@
@* 			const validationSummary = document.getElementById('validation-summary'); *@

@* 			inputs.forEach(input => { *@
@* 				input.addEventListener('input', function () { *@
@* 					validateField(this); *@
@* 				}); *@

@* 				input.addEventListener('blur', function () { *@
@* 					validateField(this); *@
@* 				}); *@
@* 			}); *@

@* 			function validateField(input) { *@
@* 				const validationMessageSpan = input.parentElement.parentElement.querySelector('.validation-message'); *@
@* 				if (!validationMessageSpan) return; *@

@* 				const isValid = input.value.trim() !== ''; *@
@* 				let errorMessage = ''; *@

@* 				if (!isValid) { *@
@* 					if (input.id === 'userName') { *@
@* 						errorMessage = 'حقل البريد الإلكتروني أو رقم الهاتف مطلوب'; *@
@* 					} else if (input.id === 'passwordField') { *@
@* 						errorMessage = 'حقل كلمة المرور مطلوب'; *@
@* 					} *@
@* 				} *@

@* 				input.setCustomValidity(errorMessage); *@

@* 				if (isValid) { *@
@* 					validationMessageSpan.textContent = '✓'; *@
@* 					validationMessageSpan.classList.add('text-success'); *@
@* 					validationMessageSpan.classList.remove('text-danger'); *@
@* 				} else { *@
@* 					validationMessageSpan.textContent = errorMessage; *@
@* 					validationMessageSpan.classList.add('text-danger'); *@
@* 					validationMessageSpan.classList.remove('text-success'); *@
@* 				} *@
@* 				validationMessageSpan.classList.add('show'); *@
@* 			} *@

@* 			// Form submission with animation *@
@* 			form.addEventListener('submit', function (e) { *@
@* 				e.preventDefault(); // Prevent default form submission *@

@* 				let isFormValid = true; *@
@* 				inputs.forEach(input => { *@
@* 					validateField(input); *@
@* 					if (!input.checkValidity()) { *@
@* 						isFormValid = false; *@
@* 					} *@
@* 				}); *@

@* 				if (!isFormValid) { *@
@* 					Swal.fire({ *@
@* 						icon: 'error', *@
@* 						title: 'خطأ في الإدخال', *@
@* 						text: 'الرجاء إصلاح الأخطاء والمحاولة مرة أخرى.', *@
@* 						confirmButtonText: 'حسناً' *@
@* 					}); *@
@* 					return; *@
@* 				} *@

@* 				const submitButton = form.querySelector('button[type="submit"]'); *@
@* 				submitButton.disabled = true; *@
@* 				submitButton.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>جاري تسجيل الدخول...'; *@

@* 				const formData = new FormData(form); *@

@* 				fetch(form.action, { *@
@* 					method: 'POST', *@
@* 					body: formData *@
@* 				}) *@
@* 					.then(response => response.json()) *@
@* 					.then(data => { *@
@* 						if (data.success) { *@
@* 							Swal.fire({ *@
@* 								icon: 'success', *@
@* 								title: 'تم تسجيل الدخول بنجاح!', *@
@* 								text: 'سيتم توجيهك الآن...', *@
@* 								timer: 1500, *@
@* 								timerProgressBar: true, *@
@* 								showConfirmButton: false, *@
@* 								backdrop: ` *@
@* 									rgba(0,0,0,0.5) *@
@* 									center *@
@* 									no-repeat *@
@* 								`, *@
@* 							}).then(() => { *@
@* 								window.location.href = data.redirectUrl; *@
@* 							}); *@
@* 						} else { *@
@* 							Swal.fire({ *@
@* 								icon: 'error', *@
@* 								title: 'فشل تسجيل الدخول', *@
@* 								text: data.message, *@
@* 								confirmButtonText: 'حسناً' *@
@* 							}); *@
@* 							submitButton.disabled = false; *@
@* 							submitButton.innerHTML = '<i class="fas fa-sign-in-alt me-2"></i>تسجيل الدخول'; *@
@* 						} *@
@* 					}) *@
@* 					.catch(error => { *@
@* 						console.error('Error:', error); *@
@* 						Swal.fire({ *@
@* 							icon: 'error', *@
@* 							title: 'حدث خطأ غير متوقع', *@
@* 							text: 'لا يمكن الاتصال بالخادم. الرجاء المحاولة مرة أخرى.', *@
@* 							confirmButtonText: 'حسناً' *@
@* 						}); *@
@* 						submitButton.disabled = false; *@
@* 						submitButton.innerHTML = '<i class="fas fa-sign-in-alt me-2"></i>تسجيل الدخول'; *@
@* 					}); *@
@* 			}); *@

@* 			// Initial animations for form elements *@
@* 			const formElements = form.querySelectorAll('.form-control, .btn-login'); *@
@* 			formElements.forEach((el, index) => { *@
@* 				el.style.opacity = '0'; *@
@* 				el.style.transform = 'translateY(10px)'; *@
@* 				el.style.animation = `fadeInUp 0.5s ease-out ${index * 0.1 + 0.5}s forwards`; *@
@* 			}); *@

@* 			// Add click-to-call functionality for phone numbers *@
@* 			const phoneLinks = document.querySelectorAll('.phone-link'); *@
@* 			phoneLinks.forEach(link => { *@
@* 				link.addEventListener('click', function(e) { *@
@* 					e.preventDefault(); *@
@* 					const phoneNumber = this.getAttribute('href').replace('tel:', ''); *@
@* 					const developerName = this.closest('.developer-item').querySelector('.developer-name').textContent; *@
					
@* 					Swal.fire({ *@
@* 						title: 'اتصال بـ ' + developerName, *@
@* 						text: 'هل تريد الاتصال بـ ' + phoneNumber + '؟', *@
@* 						icon: 'question', *@
@* 						showCancelButton: true, *@
@* 						confirmButtonText: 'اتصال', *@
@* 						cancelButtonText: 'إلغاء', *@
@* 						reverseButtons: true *@
@* 					}).then((result) => { *@
@* 						if (result.isConfirmed) { *@
@* 							window.location.href = 'tel:' + phoneNumber; *@
@* 						} *@
@* 					}); *@
@* 				}); *@
@* 			}); *@
@* 		}); *@
@* 	</script> *@
@* </body> *@
@* </html> *@